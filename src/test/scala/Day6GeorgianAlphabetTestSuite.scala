import org.junit.Test
import org.scalatest.junit.AssertionsForJUnit

/**
  * @author ynupc
  *         Created on 2016/07/19
  */
class Day6GeorgianAlphabetTestSuite extends AssertionsForJUnit {
  @Test
  def testMrgvlovaniToUpperCase(): Unit = {
    assert(Character.toUpperCase('Ⴀ') == 'Ⴀ')
    assert(Character.toUpperCase('Ⴁ') == 'Ⴁ')
    assert(Character.toUpperCase('Ⴂ') == 'Ⴂ')
    assert(Character.toUpperCase('Ⴃ') == 'Ⴃ')
    assert(Character.toUpperCase('Ⴄ') == 'Ⴄ')
    assert(Character.toUpperCase('Ⴅ') == 'Ⴅ')
    assert(Character.toUpperCase('Ⴆ') == 'Ⴆ')
    assert(Character.toUpperCase('Ⴡ') == 'Ⴡ')
    assert(Character.toUpperCase('Ⴇ') == 'Ⴇ')
    assert(Character.toUpperCase('Ⴈ') == 'Ⴈ')
    assert(Character.toUpperCase('Ⴉ') == 'Ⴉ')
    assert(Character.toUpperCase('Ⴊ') == 'Ⴊ')
    assert(Character.toUpperCase('Ⴋ') == 'Ⴋ')
    assert(Character.toUpperCase('Ⴌ') == 'Ⴌ')
    assert(Character.toUpperCase('Ⴢ') == 'Ⴢ')
    assert(Character.toUpperCase('Ⴍ') == 'Ⴍ')
    assert(Character.toUpperCase('Ⴎ') == 'Ⴎ')
    assert(Character.toUpperCase('Ⴏ') == 'Ⴏ')
    assert(Character.toUpperCase('Ⴐ') == 'Ⴐ')
    assert(Character.toUpperCase('Ⴑ') == 'Ⴑ')
    assert(Character.toUpperCase('Ⴒ') == 'Ⴒ')
    assert(Character.toUpperCase('Ⴣ') == 'Ⴣ')
    //assert(Character.toUpperCase('ႭჃ') == 'ႭჃ')
    assert(Character.toUpperCase('Ⴍ') == 'Ⴍ')
    assert(Character.toUpperCase('Ⴣ') == 'Ⴣ')
    assert(Character.toUpperCase('Ⴓ') == 'Ⴓ')
    assert(Character.toUpperCase('Ⴔ') == 'Ⴔ')
    assert(Character.toUpperCase('Ⴕ') == 'Ⴕ')
    assert(Character.toUpperCase('Ⴖ') == 'Ⴖ')
    assert(Character.toUpperCase('Ⴗ') == 'Ⴗ')
    assert(Character.toUpperCase('Ⴘ') == 'Ⴘ')
    assert(Character.toUpperCase('Ⴙ') == 'Ⴙ')
    assert(Character.toUpperCase('Ⴚ') == 'Ⴚ')
    assert(Character.toUpperCase('Ⴛ') == 'Ⴛ')
    assert(Character.toUpperCase('Ⴜ') == 'Ⴜ')
    assert(Character.toUpperCase('Ⴝ') == 'Ⴝ')
    assert(Character.toUpperCase('Ⴞ') == 'Ⴞ')
    assert(Character.toUpperCase('Ⴤ') == 'Ⴤ')
    assert(Character.toUpperCase('Ⴟ') == 'Ⴟ')
    assert(Character.toUpperCase('Ⴠ') == 'Ⴠ')
    assert(Character.toUpperCase('Ⴥ') == 'Ⴥ')
  }

  @Test
  def testNuskhuriToUpperCase(): Unit = {
    assert(Character.toUpperCase('ⴀ') == 'Ⴀ')
    assert(Character.toUpperCase('ⴁ') == 'Ⴁ')
    assert(Character.toUpperCase('ⴂ') == 'Ⴂ')
    assert(Character.toUpperCase('ⴃ') == 'Ⴃ')
    assert(Character.toUpperCase('ⴄ') == 'Ⴄ')
    assert(Character.toUpperCase('ⴅ') == 'Ⴅ')
    assert(Character.toUpperCase('ⴆ') == 'Ⴆ')
    assert(Character.toUpperCase('ⴡ') == 'Ⴡ')
    assert(Character.toUpperCase('ⴇ') == 'Ⴇ')
    assert(Character.toUpperCase('ⴈ') == 'Ⴈ')
    assert(Character.toUpperCase('ⴉ') == 'Ⴉ')
    assert(Character.toUpperCase('ⴊ') == 'Ⴊ')
    assert(Character.toUpperCase('ⴋ') == 'Ⴋ')
    assert(Character.toUpperCase('ⴌ') == 'Ⴌ')
    assert(Character.toUpperCase('ⴢ') == 'Ⴢ')
    assert(Character.toUpperCase('ⴍ') == 'Ⴍ')
    assert(Character.toUpperCase('ⴎ') == 'Ⴎ')
    assert(Character.toUpperCase('ⴏ') == 'Ⴏ')
    assert(Character.toUpperCase('ⴐ') == 'Ⴐ')
    assert(Character.toUpperCase('ⴑ') == 'Ⴑ')
    assert(Character.toUpperCase('ⴒ') == 'Ⴒ')
    assert(Character.toUpperCase('ⴣ') == 'Ⴣ')
    //assert(Character.toUpperCase('ⴍⴣ') == 'ႭჃ')
    assert(Character.toUpperCase('ⴍ') == 'Ⴍ')
    assert(Character.toUpperCase('ⴣ') == 'Ⴣ')
    assert(Character.toUpperCase('ⴓ') == 'Ⴓ')
    assert(Character.toUpperCase('ⴔ') == 'Ⴔ')
    assert(Character.toUpperCase('ⴕ') == 'Ⴕ')
    assert(Character.toUpperCase('ⴖ') == 'Ⴖ')
    assert(Character.toUpperCase('ⴗ') == 'Ⴗ')
    assert(Character.toUpperCase('ⴘ') == 'Ⴘ')
    assert(Character.toUpperCase('ⴙ') == 'Ⴙ')
    assert(Character.toUpperCase('ⴚ') == 'Ⴚ')
    assert(Character.toUpperCase('ⴛ') == 'Ⴛ')
    assert(Character.toUpperCase('ⴜ') == 'Ⴜ')
    assert(Character.toUpperCase('ⴝ') == 'Ⴝ')
    assert(Character.toUpperCase('ⴞ') == 'Ⴞ')
    assert(Character.toUpperCase('ⴤ') == 'Ⴤ')
    assert(Character.toUpperCase('ⴟ') == 'Ⴟ')
    assert(Character.toUpperCase('ⴠ') == 'Ⴠ')
    assert(Character.toUpperCase('ⴥ') == 'Ⴥ')
  }

  @Test
  def testMrgvlovaniToLowerCase(): Unit = {
    assert(Character.toLowerCase('Ⴀ') == 'ⴀ')
    assert(Character.toLowerCase('Ⴁ') == 'ⴁ')
    assert(Character.toLowerCase('Ⴂ') == 'ⴂ')
    assert(Character.toLowerCase('Ⴃ') == 'ⴃ')
    assert(Character.toLowerCase('Ⴄ') == 'ⴄ')
    assert(Character.toLowerCase('Ⴅ') == 'ⴅ')
    assert(Character.toLowerCase('Ⴆ') == 'ⴆ')
    assert(Character.toLowerCase('Ⴡ') == 'ⴡ')
    assert(Character.toLowerCase('Ⴇ') == 'ⴇ')
    assert(Character.toLowerCase('Ⴈ') == 'ⴈ')
    assert(Character.toLowerCase('Ⴉ') == 'ⴉ')
    assert(Character.toLowerCase('Ⴊ') == 'ⴊ')
    assert(Character.toLowerCase('Ⴋ') == 'ⴋ')
    assert(Character.toLowerCase('Ⴌ') == 'ⴌ')
    assert(Character.toLowerCase('Ⴢ') == 'ⴢ')
    assert(Character.toLowerCase('Ⴍ') == 'ⴍ')
    assert(Character.toLowerCase('Ⴎ') == 'ⴎ')
    assert(Character.toLowerCase('Ⴏ') == 'ⴏ')
    assert(Character.toLowerCase('Ⴐ') == 'ⴐ')
    assert(Character.toLowerCase('Ⴑ') == 'ⴑ')
    assert(Character.toLowerCase('Ⴒ') == 'ⴒ')
    assert(Character.toLowerCase('Ⴣ') == 'ⴣ')
    //assert(Character.toLowerCase('ႭჃ') == 'ⴍⴣ')
    assert(Character.toLowerCase('Ⴍ') == 'ⴍ')
    assert(Character.toLowerCase('Ⴣ') == 'ⴣ')
    assert(Character.toLowerCase('Ⴓ') == 'ⴓ')
    assert(Character.toLowerCase('Ⴔ') == 'ⴔ')
    assert(Character.toLowerCase('Ⴕ') == 'ⴕ')
    assert(Character.toLowerCase('Ⴖ') == 'ⴖ')
    assert(Character.toLowerCase('Ⴗ') == 'ⴗ')
    assert(Character.toLowerCase('Ⴘ') == 'ⴘ')
    assert(Character.toLowerCase('Ⴙ') == 'ⴙ')
    assert(Character.toLowerCase('Ⴚ') == 'ⴚ')
    assert(Character.toLowerCase('Ⴛ') == 'ⴛ')
    assert(Character.toLowerCase('Ⴜ') == 'ⴜ')
    assert(Character.toLowerCase('Ⴝ') == 'ⴝ')
    assert(Character.toLowerCase('Ⴞ') == 'ⴞ')
    assert(Character.toLowerCase('Ⴤ') == 'ⴤ')
    assert(Character.toLowerCase('Ⴟ') == 'ⴟ')
    assert(Character.toLowerCase('Ⴠ') == 'ⴠ')
    assert(Character.toLowerCase('Ⴥ') == 'ⴥ')
  }

  @Test
  def testNuskhuriToLowerCase(): Unit = {
    assert(Character.toLowerCase('ⴀ') == 'ⴀ')
    assert(Character.toLowerCase('ⴁ') == 'ⴁ')
    assert(Character.toLowerCase('ⴂ') == 'ⴂ')
    assert(Character.toLowerCase('ⴃ') == 'ⴃ')
    assert(Character.toLowerCase('ⴄ') == 'ⴄ')
    assert(Character.toLowerCase('ⴅ') == 'ⴅ')
    assert(Character.toLowerCase('ⴆ') == 'ⴆ')
    assert(Character.toLowerCase('ⴡ') == 'ⴡ')
    assert(Character.toLowerCase('ⴇ') == 'ⴇ')
    assert(Character.toLowerCase('ⴈ') == 'ⴈ')
    assert(Character.toLowerCase('ⴉ') == 'ⴉ')
    assert(Character.toLowerCase('ⴊ') == 'ⴊ')
    assert(Character.toLowerCase('ⴋ') == 'ⴋ')
    assert(Character.toLowerCase('ⴌ') == 'ⴌ')
    assert(Character.toLowerCase('ⴢ') == 'ⴢ')
    assert(Character.toLowerCase('ⴍ') == 'ⴍ')
    assert(Character.toLowerCase('ⴎ') == 'ⴎ')
    assert(Character.toLowerCase('ⴏ') == 'ⴏ')
    assert(Character.toLowerCase('ⴐ') == 'ⴐ')
    assert(Character.toLowerCase('ⴑ') == 'ⴑ')
    assert(Character.toLowerCase('ⴒ') == 'ⴒ')
    assert(Character.toLowerCase('ⴣ') == 'ⴣ')
    //assert(Character.toLowerCase('ⴍⴣ') == 'ⴍⴣ')
    assert(Character.toLowerCase('ⴍ') == 'ⴍ')
    assert(Character.toLowerCase('ⴣ') == 'ⴣ')
    assert(Character.toLowerCase('ⴓ') == 'ⴓ')
    assert(Character.toLowerCase('ⴔ') == 'ⴔ')
    assert(Character.toLowerCase('ⴕ') == 'ⴕ')
    assert(Character.toLowerCase('ⴖ') == 'ⴖ')
    assert(Character.toLowerCase('ⴗ') == 'ⴗ')
    assert(Character.toLowerCase('ⴘ') == 'ⴘ')
    assert(Character.toLowerCase('ⴙ') == 'ⴙ')
    assert(Character.toLowerCase('ⴚ') == 'ⴚ')
    assert(Character.toLowerCase('ⴛ') == 'ⴛ')
    assert(Character.toLowerCase('ⴜ') == 'ⴜ')
    assert(Character.toLowerCase('ⴝ') == 'ⴝ')
    assert(Character.toLowerCase('ⴞ') == 'ⴞ')
    assert(Character.toLowerCase('ⴤ') == 'ⴤ')
    assert(Character.toLowerCase('ⴟ') == 'ⴟ')
    assert(Character.toLowerCase('ⴠ') == 'ⴠ')
    assert(Character.toLowerCase('ⴥ') == 'ⴥ')
  }

  @Test
  def testMkhedruliToUpperCase(): Unit = {
    assert(Character.toUpperCase('ა') == 'ა')
    assert(Character.toUpperCase('ბ') == 'ბ')
    assert(Character.toUpperCase('გ') == 'გ')
    assert(Character.toUpperCase('დ') == 'დ')
    assert(Character.toUpperCase('ე') == 'ე')
    assert(Character.toUpperCase('ვ') == 'ვ')
    assert(Character.toUpperCase('ზ') == 'ზ')
    assert(Character.toUpperCase('ჱ') == 'ჱ')
    assert(Character.toUpperCase('თ') == 'თ')
    assert(Character.toUpperCase('ი') == 'ი')
    assert(Character.toUpperCase('კ') == 'კ')
    assert(Character.toUpperCase('ლ') == 'ლ')
    assert(Character.toUpperCase('მ') == 'მ')
    assert(Character.toUpperCase('ნ') == 'ნ')
    assert(Character.toUpperCase('ჲ') == 'ჲ')
    assert(Character.toUpperCase('ო') == 'ო')
    assert(Character.toUpperCase('პ') == 'პ')
    assert(Character.toUpperCase('ჟ') == 'ჟ')
    assert(Character.toUpperCase('რ') == 'რ')
    assert(Character.toUpperCase('ს') == 'ს')
    assert(Character.toUpperCase('ტ') == 'ტ')
    assert(Character.toUpperCase('ჳ') == 'ჳ')
    assert(Character.toUpperCase('უ') == 'უ')
    assert(Character.toUpperCase('ფ') == 'ფ')
    assert(Character.toUpperCase('ქ') == 'ქ')
    assert(Character.toUpperCase('ღ') == 'ღ')
    assert(Character.toUpperCase('ყ') == 'ყ')
    assert(Character.toUpperCase('შ') == 'შ')
    assert(Character.toUpperCase('ჩ') == 'ჩ')
    assert(Character.toUpperCase('ც') == 'ც')
    assert(Character.toUpperCase('ძ') == 'ძ')
    assert(Character.toUpperCase('წ') == 'წ')
    assert(Character.toUpperCase('ჭ') == 'ჭ')
    assert(Character.toUpperCase('ხ') == 'ხ')
    assert(Character.toUpperCase('ჴ') == 'ჴ')
    assert(Character.toUpperCase('ჯ') == 'ჯ')
    assert(Character.toUpperCase('ჰ') == 'ჰ')
    assert(Character.toUpperCase('ჵ') == 'ჵ')

    assert(Character.toUpperCase('ჶ') == 'ჶ')
    assert(Character.toUpperCase('ჷ') == 'ჷ')
    assert(Character.toUpperCase('ჸ') == 'ჸ')
    assert(Character.toUpperCase('ჹ') == 'ჹ')
    assert(Character.toUpperCase('ჺ') == 'ჺ')
  }

  @Test
  def testMkhedruliToLowerCase(): Unit = {
    assert(Character.toLowerCase('ა') == 'ა')
    assert(Character.toLowerCase('ბ') == 'ბ')
    assert(Character.toLowerCase('გ') == 'გ')
    assert(Character.toLowerCase('დ') == 'დ')
    assert(Character.toLowerCase('ე') == 'ე')
    assert(Character.toLowerCase('ვ') == 'ვ')
    assert(Character.toLowerCase('ზ') == 'ზ')
    assert(Character.toLowerCase('ჱ') == 'ჱ')
    assert(Character.toLowerCase('თ') == 'თ')
    assert(Character.toLowerCase('ი') == 'ი')
    assert(Character.toLowerCase('კ') == 'კ')
    assert(Character.toLowerCase('ლ') == 'ლ')
    assert(Character.toLowerCase('მ') == 'მ')
    assert(Character.toLowerCase('ნ') == 'ნ')
    assert(Character.toLowerCase('ჲ') == 'ჲ')
    assert(Character.toLowerCase('ო') == 'ო')
    assert(Character.toLowerCase('პ') == 'პ')
    assert(Character.toLowerCase('ჟ') == 'ჟ')
    assert(Character.toLowerCase('რ') == 'რ')
    assert(Character.toLowerCase('ს') == 'ს')
    assert(Character.toLowerCase('ტ') == 'ტ')
    assert(Character.toLowerCase('ჳ') == 'ჳ')
    assert(Character.toLowerCase('უ') == 'უ')
    assert(Character.toLowerCase('ფ') == 'ფ')
    assert(Character.toLowerCase('ქ') == 'ქ')
    assert(Character.toLowerCase('ღ') == 'ღ')
    assert(Character.toLowerCase('ყ') == 'ყ')
    assert(Character.toLowerCase('შ') == 'შ')
    assert(Character.toLowerCase('ჩ') == 'ჩ')
    assert(Character.toLowerCase('ც') == 'ც')
    assert(Character.toLowerCase('ძ') == 'ძ')
    assert(Character.toLowerCase('წ') == 'წ')
    assert(Character.toLowerCase('ჭ') == 'ჭ')
    assert(Character.toLowerCase('ხ') == 'ხ')
    assert(Character.toLowerCase('ჴ') == 'ჴ')
    assert(Character.toLowerCase('ჯ') == 'ჯ')
    assert(Character.toLowerCase('ჰ') == 'ჰ')
    assert(Character.toLowerCase('ჵ') == 'ჵ')

    assert(Character.toLowerCase('ჶ') == 'ჶ')
    assert(Character.toLowerCase('ჷ') == 'ჷ')
    assert(Character.toLowerCase('ჸ') == 'ჸ')
    assert(Character.toLowerCase('ჹ') == 'ჹ')
    assert(Character.toLowerCase('ჺ') == 'ჺ')

  }
}
